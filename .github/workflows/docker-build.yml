name: Build and Push (Release Only)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]   # 릴리스 공개 시 실행

env:
  REGISTRY: docker.io
  # Docker Hub 네임스페이스를 본인 계정으로 맞춰주세요
  IMAGE_NAME: hdh0926/whoogle-search-mcp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Docker Hub 로그인 (릴리스 시에만) ---
      - name: Log in to Docker Hub
        if: github.event_name == 'release' && startsWith(github.event.release.tag_name, 'v')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # --- 메타데이터 추출: 브랜치/PR (빌드 테스트용) ---
      - name: Extract metadata (branch/PR)
        id: meta
        if: github.event_name != 'release'
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=false

      # --- 메타데이터 추출: 릴리스 (푸시용) ---
      - name: Extract metadata (release tag)
        id: meta_release
        if: github.event_name == 'release' && startsWith(github.event.release.tag_name, 'v')
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.release.tag_name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.release.tag_name }}
            type=semver,pattern={{major}},value=${{ github.event.release.tag_name }}

      # --- 빌드 및 조건부 푸시 ---
      - name: Build and (conditionally) push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' && startsWith(github.event.release.tag_name, 'v') }}
          tags: ${{ steps.meta_release.outputs.tags || steps.meta.outputs.tags }}
          labels: ${{ steps.meta_release.outputs.labels || steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
